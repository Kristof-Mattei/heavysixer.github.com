<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ProTip | Mark Daggett's Blog]]></title>
  <link href="http://heavysixer.github.com/blog/categories/protip/atom.xml" rel="self"/>
  <link href="http://heavysixer.github.com/"/>
  <updated>2013-03-04T21:39:02-06:00</updated>
  <id>http://heavysixer.github.com/</id>
  <author>
    <name><![CDATA[Mark Daggett]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rails Protip: hash.slice]]></title>
    <link href="http://heavysixer.github.com/blog/2012/03/26/rails-protip-hash-dot-slice/"/>
    <updated>2012-03-26T11:09:00-05:00</updated>
    <id>http://heavysixer.github.com/blog/2012/03/26/rails-protip-hash-dot-slice</id>
    <content type="html"><![CDATA[<p>Rails has hidden gems just waiting to be discovered. I will demonstrate the use of <em>Hash.slice</em>, which is one of the core extensions of ActiveSupport.</p>

<p>Here is an example of how <em>Hash.slice</em> can clean up a controller, take this existing code for example:
<code>ruby
def index
  @users = User.paginate({ :page =&gt; params[:page].present? ? params[:page].to_i : 1, :per_page =&gt; params[:per_page].present? ? params[:per_page].to_i : 12 })
end
</code></p>

<p>With <em>Hash.slice</em> we can shorten it to:
<code>ruby
def index
  @users = User.paginate({ :page =&gt; 1, :per_page =&gt; 12 }.merge(params.slice(:page, :per_page)))
end
</code></p>

<p><em>Hash.slice</em> is that it is very forgiving. The method only returns the attributes if they exist. In our example we are assured all conditions will be met because the default values will only be overwritten if <em>Hash.slice</em> returns them.</p>
]]></content>
  </entry>
  
</feed>
